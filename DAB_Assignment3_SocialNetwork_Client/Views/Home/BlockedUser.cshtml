
@{
    ViewData["Title"] = "BlockedUser";
}

<h1>Blocked users</h1>
<hr />
<div id="vueBlockUser">
    <label for="inputEmail">Email address to block:</label>
    <div style="width: 30%">
            <input type="email" id="inputEmail" class="form-control" placeholder="Email address" required="" autofocus="">
            <br />
            <button v-on:click="getUserToBlock(inputEmail); blockUser();" class="btn btn-lg btn-primary btn-block" type="submit">Block</button>
    </div>
</div>
<hr />
<div id="vueBlockedUsers" style="font-size: x-large">
    <h3>Currently blocked</h3>
    <br />
    @*<ul>
            <li v-for="blockeduser in blockedusers">{{blockeduser.name}}, {{blockeduser.email}}</li>
        </ul>*@
    <dl id="vueBlocked" v-for="blockedSubscriber in blockedSubscribers">
        <dt>{{blockedSubscriber.firstName}} {{blockedSubscriber.lastName}} {{blockedSubscriber.email}}</dt>
    </dl>
</div>
<script>
    var vm1 = new Vue({
        el: '#vueBlockUser',
        data: {
            user: "",
            sharedStateData: applicationState.data
        },
          methods: {
            getUserToBlock(id) {
                let url = sharedStateData.apiUrl + "User/" + id;
                    fetch(url)
                        .then(function (response) {
                            if (response.status !== 200) {
                                console.log('Error detected. Status Code: ' + response.status);
                                return;
                            }
                            response.json().then(function (userToBlock) {
                                    vm1.user = userToBlock;
                                })
                                .catch(function (error) {
                                    console.log('Fetch error :-S', error);
                                });
                        });
                    },
            blockUser() {
                let url = sharedStateData.apiUrl + "User/";
                fetch(url)
                    .then(function(response) {
                    if (response.status !== 201) {
                        alert('An error was detected. Status code' + response.status);
                        return;
                    }
                    response.json().then(function(user) {
                        alert('Received request to block user');
                        sharedStateData.currentUser.userId.put('blockedSubscriberIds', user.userId);
                        })
                        .catch(function(err) {
                            alert('Error' + err);
                        });
                });
            }
        }
    });
    var vm2 = new Vue({
        el: '#vueBlockedUsers',
        data: {
            blockedSubscribers: [],
            sharedStateData: applicationState.data
        },
        methods: {
            GetBlockedUsers() {
                let url = sharedStateData.apiUrl + "User/";
                fetch(url)
                    .then(function (response) {
                        if (response.status !== 200) {
                            console.log('Error detected. Status Code: ' + response.status);
                            return;
                        }
                        response.json().then(function (blockedSubscriberIds) {
                            vm2.blockedSubscribers = blockedSubscriberIds;
                        })
                            .catch(function (error) {
                                console.log('Fetch error :-S', error);
                            });
                    });
            }
        }
    });
</script>
